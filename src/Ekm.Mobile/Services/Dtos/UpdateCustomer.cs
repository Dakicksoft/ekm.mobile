// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Ekm.Mobile.Services.Dtos
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class UpdateCustomer
    {
        /// <summary>
        /// Initializes a new instance of the UpdateCustomer class.
        /// </summary>
        public UpdateCustomer()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpdateCustomer class.
        /// </summary>
        public UpdateCustomer(string firstName, string lastName, long? id = default(long?), string emailAddress = default(string), int? orderCount = default(int?), double? loyaltyPoints = default(double?), System.DateTime? createdDate = default(System.DateTime?), System.DateTime? modifiedDate = default(System.DateTime?), System.DateTime? lastLoginDate = default(System.DateTime?), System.DateTime? lastLoginAttemptDate = default(System.DateTime?), bool? locked = default(bool?), System.DateTime? lockedDate = default(System.DateTime?), System.DateTime? lockedEndDate = default(System.DateTime?), bool? isSubscribedToNewsletter = default(bool?))
        {
            Id = id;
            EmailAddress = emailAddress;
            FirstName = firstName;
            LastName = lastName;
            OrderCount = orderCount;
            LoyaltyPoints = loyaltyPoints;
            CreatedDate = createdDate;
            ModifiedDate = modifiedDate;
            LastLoginDate = lastLoginDate;
            LastLoginAttemptDate = lastLoginAttemptDate;
            Locked = locked;
            LockedDate = lockedDate;
            LockedEndDate = lockedEndDate;
            IsSubscribedToNewsletter = isSubscribedToNewsletter;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public long? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "email_address")]
        public string EmailAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "first_name")]
        public string FirstName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "last_name")]
        public string LastName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "order_count")]
        public int? OrderCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "loyalty_points")]
        public double? LoyaltyPoints { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "created_date")]
        public System.DateTime? CreatedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modified_date")]
        public System.DateTime? ModifiedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "last_login_date")]
        public System.DateTime? LastLoginDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "last_login_attempt_date")]
        public System.DateTime? LastLoginAttemptDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "locked")]
        public bool? Locked { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "locked_date")]
        public System.DateTime? LockedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "locked_end_date")]
        public System.DateTime? LockedEndDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "is_subscribed_to_newsletter")]
        public bool? IsSubscribedToNewsletter { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FirstName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FirstName");
            }
            if (LastName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "LastName");
            }
        }
    }
}
